# The manifest for the "front-end-slow" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: front-end-slow
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: 'front-end-slow'
  # You can specify a custom health check path. The default is "/".
  healthcheck:
    path: '/health200d' # set on ECS service health check path
    port: 80
    success_codes: '200'
    healthy_threshold: 3
    unhealthy_threshold: 2
    interval: 5s
    timeout: 2s
    grace_period: 1s

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#image-build
  build: Copilot/example/Dockerfile
  # Port exposed through your container to route traffic to it.
  port: 80
  healthcheck:
    command:
      # think cmd shell is needed because Createcontainer API doesn't automagically add '/bin/sh -c'. Also couldn't get
      # to work with CMD and arguments of ["/bin/sh -c", "curl -f..."]...
      - "CMD-SHELL" # WOW, this left a mark. Need to use CMD-SHELL with ECS task definitions healthcheck and CMD with Dockerfile healthcheck
      - "curl -f http://localhost/health200e || {>&2 echo failed health && exit 1;}"
    interval: 15s
    retries: 10
    timeout: 30s
    start_period: 10s

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.
 
# Optional fields for more advanced use-cases.
#
#variables:                    # Pass environment variables as key value pairs.
#  LOG_LEVEL: info

#secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.

# You can override any of the values defined above by environment.
#environments:
#  test:
#    count: 2               # Number of tasks to run for the "test" environment.
#    deployment:            # The deployment strategy for the "test" environment.
#       rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.
